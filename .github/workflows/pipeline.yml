name: Release Pipeline

on:
  push: {}

jobs:
  release-pipeline:
    name: Release Pipeline
    runs-on: windows-latest
    env:
      CERT_NAME: cert.pfx

    steps:
      - uses: actions/checkout@v4
 
      - name: Setup Dotnet tools
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
     
      - name: Run Core.Test
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests
    
      - name: Run IntegrationTests
        run: dotnet test .\src\DevOpsDaysTasks.IntegrationTests

# Problem: Hardcoded Release Version
      - name: Publish Build
        run: dotnet publish -c Release src\DevOpsDaysTasks.UI\ -o DevOpsDaysTasks /p:Version=1.0.0 /p:VersionName=VolCat

# Problem: we don't want to use the workshop folder
      - name: Checkout external files
        uses: actions/checkout@v4
        with: 
          repository: martinzimmermann/DevOpsDaysGraz-2025-ExternalFiles
          path: ExternalFiles

      - name: Copy Template
        run: |
          mkdir DevOpsDaysTasks\Templates
          cp ExternalFiles/default-tasks.xml DevOpsDaysTasks/Templates
        
      - name: Copy Template
        run: |
          mkdir DevOpsDaysTasks\Help
          cp ExternalFiles/Help.pdf DevOpsDaysTasks/Help

# Problem Cert and Password
      - name: Create Cert
        run:  |
          $base64 = "${{ secrets.SIGN_CERTIFICATE_PFX_B64 }}"
          $content = [System.Convert]::FromBase64String($base64)
          Set-Content ${{ env.CERT_NAME }} -Value $content -AsByteStream


      - name: Sign Release
        run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile ${{ env.CERT_NAME }} -PfxPassword Password

# we don't have a release 

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with: 
          path: DevOpsDaysTasks
          name: DevOpsDaysTasks